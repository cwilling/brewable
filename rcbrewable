#!/bin/sh

# Copyright (c) 2016-2017 Christoph Willing (Brisbane, Australia)
# All rights reserved.
#
# Author: Christoph Willing, 2016
#
# /etc/init.d/brewable

### BEGIN INIT INFO
# Provides:          brewable
# Required-Start:    $local_fs $network $syslog
# Required-Stop:     $local_fs $network $syslog
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Short-Description: brewable temperature controller daemon
# Description:       The brewable daemon starts a nodejs web server
#	enabling remote browser control of a temperature control system.
#	We want it to be active in runlevels 3 and 5,
#	as these are the runlevels with the network available.
### END INIT INFO


# Check for config file
BREWABLE_CONFIG=/etc/default/brewable
test -r $BREWABLE_CONFIG || { echo "$BREWABLE_CONFIG not found";
	if [ "$1" = "stop" ]; then exit 0;
	else exit 5; fi; }

# Read config
. $BREWABLE_CONFIG

# Check for server file
BREWABLE_SERVER=/usr/bin/brewable
test -x $BREWABLE_SERVER || { echo "$BREWABLE_SERVER not installed";
	if [ "$1" = "stop" ]; then exit 0;
	else exit 5; fi; }

brewable_start () {
    echo "Starting brewable"

    # Ensure the pid can be written by the application
    PIDDIR=$(dirname $BREWABLE_PID_FILE)
    mkdir -p $PIDDIR 
    chown $BREWABLE_USER $PIDDIR

    # Ensure logs can be written somewhere
    mkdir -p $BREWABLE_LOG_DIR
    touch /var/log/brewable/brewable_stdout.log
    touch /var/log/brewable/brewable_stderr.log
    chown -R $BREWABLE_USER:$BREWABLE_USER $BREWABLE_LOG_DIR

    mkdir -p $BREWABLE_RUN_DIR
    cd $BREWABLE_RUN_DIR
    su -c \
        $BREWABLE_SERVER \
        $BREWABLE_USER \
        -- \
        port=$BREWABLE_PORT \
        interval=$BREWABLE_JOBCHECKINTERVAL \
            1>>/var/log/brewable/brewable_stdout.log \
            2>>/var/log/brewable/brewable_stderr.log \
            &
}

brewable_stop () {
    echo "Stopping brewable"

    pid=$(cat $BREWABLE_PID_FILE)
    case $pid in
        ''|*[!0-9]*)
            ps -ef \
                | grep -v grep \
                | grep "node brewable" \
                | awk '{print $2}' \
                | xargs kill -HUP
            ;;

        *)
            kill -HUP $pid
            ;;
    esac
}

case "$1" in
    start)
        brewable_start
        ;;
    stop)
        brewable_stop
        ;;
    restart)
        brewable_stop
        sleep 1
        brewable_start
        ;;
    *)
        echo "Usage: /etc/init.d/brewable start|stop|restart"
        exit 1
        ;;
esac

exit 0

# ex:set ai shiftwidth=4 inputtab=spaces smarttab noautotab:
